spring:
  profiles:
    group:
      "test": "test,common"
      "dev":  "dev,common"
      "prod": "prod,common"

---
spring:
  datasource:
    url: "r2dbc:h2:mem://localhost/testdb;MODE=MYSQL;DATABASE_TO_LOWER=true;DATABASE_TO_UPPER=false"
    username: "sa"
    password:
  config:
    activate:
      on-profile: "test"

---
spring:
  datasource:
    url: "r2dbc:pool:mysql://localhost:3306/mydb?useUnicode=true&characterEncoding=utf8"
    username: "root"
    password: "devpassword"
  config:
    activate:
      on-profile: "prod"

logging:
  level:
    org.springframework.r2dbc.core: debug
---
# Spring Security 디버깅 출력
#logging:
#  level:
#    org.springframework.security: DEBUG


---
spring:
  datasource:
    url: "r2dbc:postgresql://localhost:5432/developer"
    username: "developer"
    password: "devpassword"
  config:
    activate:
      on-profile: "prod"

---
spring:
  config:
    activate:
      on-profile: "common"

server:
  port: 8080
  tomcat:
    uri-encoding: UTF-8
---

spring:
  security:
    user:
      name: user
      password: password
    reactive:
      authorization:
        # 인가 처리를 수행하는 ReactiveAuthorizationManager 빈을 설정합니다.
        manager-bean: customReactiveAuthorizationManager

      # 허용되지 않은 요청에 대한 처리 방식을 정의합니다.
      access-denied-handler:
        # 허용되지 않은 요청 시 리다이렉트할 경로를 설정합니다.
        error-page: /error

jwt:
  secret-key: your-secret-key
  expirationTime: 18000
